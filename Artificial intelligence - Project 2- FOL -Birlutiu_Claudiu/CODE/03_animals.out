============================== Mace4 =================================
Mace4 (64) version 2017-11A (CIIRC), November 2017.
Process 13221 was started by birlutiuclaudiu on birlutiuclaudiu-HP-Pavilion-Laptop-15-cs3xxx,
Tue Dec  7 18:49:21 2021
The command was "mace4 -c -n 4 -m -1 -f 03_animals.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file 03_animals.in

set(arithmetic).
    % set(arithmetic) -> clear(lnh).
    % set(arithmetic) -> assign(selection_order, 0).

    % Declaring Mace4 arithmetic parse types.
assign(domain_size,4).
    % assign(domain_size, 4) -> assign(start_size, 4).
    % assign(domain_size, 4) -> assign(end_size, 4).

formulas(assumptions).
Pig(x) -> -Donkey(x) & -Camel(x) & -Goat(x).
Donkey(x) -> -Pig(x) & -Camel(x) & -Goat(x).
Camel(x) -> -Pig(x) & -Donkey(x) & -Goat(x).
Goat(x) -> -Pig(x) & -Donkey(x) & -Camel(x).
(exists x Pig(x)) & (exists x Donkey(x)) & (exists x Camel(x)) & (exists x Goat(x)).
Pig(x) & Pig(y) -> x = y.
Donkey(x) & Donkey(y) -> x = y.
Camel(x) & Camel(y) -> x = y.
Goat(x) & Goat(y) -> x = y.
Abou = 0.
Ahmed = 1.
Omar = 2.
Sharif = 3.
-Pig(Ahmed).
-Camel(Sharif) & -Pig(Sharif).
-Camel(Ahmed) -> -Pig(Omar).
-Goat(Abou) & -Pig(Abou).
-Goat(Omar) & -Camel(Omar).
end_of_list.
    % assign(domain_size, 4) -> assign(start_size, 4).
    % assign(domain_size, 4) -> assign(end_size, 4).

% From the command line: assign(domain_size, 4).

% From the command line: assign(max_models, -1).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 Pig(x) -> -Donkey(x) & -Camel(x) & -Goat(x) # label(non_clause).  [assumption].
2 Donkey(x) -> -Pig(x) & -Camel(x) & -Goat(x) # label(non_clause).  [assumption].
3 Camel(x) -> -Pig(x) & -Donkey(x) & -Goat(x) # label(non_clause).  [assumption].
4 Goat(x) -> -Pig(x) & -Donkey(x) & -Camel(x) # label(non_clause).  [assumption].
5 (exists x Pig(x)) & (exists x Donkey(x)) & (exists x Camel(x)) & (exists x Goat(x)) # label(non_clause).  [assumption].
6 Pig(x) & Pig(y) -> x = y # label(non_clause).  [assumption].
7 Donkey(x) & Donkey(y) -> x = y # label(non_clause).  [assumption].
8 Camel(x) & Camel(y) -> x = y # label(non_clause).  [assumption].
9 Goat(x) & Goat(y) -> x = y # label(non_clause).  [assumption].
10 -Camel(Sharif) & -Pig(Sharif) # label(non_clause).  [assumption].
11 -Camel(Ahmed) -> -Pig(Omar) # label(non_clause).  [assumption].
12 -Goat(Abou) & -Pig(Abou) # label(non_clause).  [assumption].
13 -Goat(Omar) & -Camel(Omar) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-Pig(x) | -Donkey(x).
-Pig(x) | -Camel(x).
-Pig(x) | -Goat(x).
-Donkey(x) | -Pig(x).
-Donkey(x) | -Camel(x).
-Donkey(x) | -Goat(x).
-Camel(x) | -Pig(x).
-Camel(x) | -Donkey(x).
-Camel(x) | -Goat(x).
-Goat(x) | -Pig(x).
-Goat(x) | -Donkey(x).
-Goat(x) | -Camel(x).
Pig(c1).
Donkey(c2).
Camel(c3).
Goat(c4).
-Pig(x) | -Pig(y) | y = x.
-Donkey(x) | -Donkey(y) | y = x.
-Camel(x) | -Camel(y) | y = x.
-Goat(x) | -Goat(y) | y = x.
Abou = 0.
Ahmed = 1.
Omar = 2.
Sharif = 3.
-Pig(Ahmed).
-Camel(Sharif).
-Pig(Sharif).
Camel(Ahmed) | -Pig(Omar).
-Goat(Abou).
-Pig(Abou).
-Goat(Omar).
-Camel(Omar).
end_of_list.

============================== end of clauses for search =============

% The largest natural number in the input is 3.

============================== DOMAIN SIZE 4 =========================

============================== MODEL =================================

interpretation( 4, [number=1, seconds=0], [

        function(Abou, [ 0 ]),

        function(Ahmed, [ 1 ]),

        function(Omar, [ 2 ]),

        function(Sharif, [ 3 ]),

        function(c1, [ 2 ]),

        function(c2, [ 0 ]),

        function(c3, [ 1 ]),

        function(c4, [ 3 ]),

        relation(Camel(_), [ 0, 1, 0, 0 ]),

        relation(Donkey(_), [ 1, 0, 0, 0 ]),

        relation(Goat(_), [ 0, 0, 0, 1 ]),

        relation(Pig(_), [ 0, 0, 1, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=128, kept=110.
Selections=0, assignments=0, propagations=24, current_models=1.
Rewrite_terms=8, rewrite_bools=127, indexes=3.
Rules_from_neg_clauses=4, cross_offs=12.

============================== end of statistics =====================

User_CPU=0.01, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 13221 exit (all_models) Tue Dec  7 18:49:21 2021
The process finished Tue Dec  7 18:49:21 2021
